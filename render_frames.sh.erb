#!/bin/bash

set -x
IFS=$'\n\t'


# added 'shift' to this array as the 0th index because SLURM_ARRAY_TASK_ID is always
# greater than or equal to 1.
START_FRAMES=(shift <%= @start_frames.join(' ')%>)
END_FRAMES=(shift <%= @end_frames.join(' ')%>)

# if it's a single node, SLURM_ARRAY_TASK_ID isn't set so set it to 1
[ -n "$SLURM_ARRAY_TASK_ID" ] || SLURM_ARRAY_TASK_ID=1

export TASK_START_FRAME=${START_FRAMES[$SLURM_ARRAY_TASK_ID]}
export TASK_END_FRAME=${END_FRAMES[$SLURM_ARRAY_TASK_ID]}

# Use LMod to load Blender into our PATH
module load blender
(
  # Change directory to where our .blend file is
  cd "$OUTPUT_DIR"
  
  env | grep -P '^[A-Z]' | sort

  # Call blender on our blend
  #   -b which blend to work on
  #   -F sets the file format
  #   -o sets the output directory; defaults to /tmp
  #   -x allows blender to set the file extension
  #   -t 0 allows blender to use as many threads as there are processors
  #   -a render all scenes in the blend
  blender \
    -b "$BLEND_FILE_PATH" \
    -F PNG \
    -o "$OUTPUT_DIR/render_" \
    -x 1 \
    -t 0 \
    -E CYCLES \
    -f "$TASK_START_FRAME..$TASK_END_FRAME" # renders frames 1-10, -f 1,3,5 renders frames 1, 3 and 5...
)

